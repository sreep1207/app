# deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app15
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-app15
  template:
    metadata:
      labels:
        app: my-app15
    spec:
      initContainers:
      - name: init-sync
        image: sree1207/rsync-alpine:latest
        command: ["/usr/local/bin/init-script.sh"]
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: efs-drupal-pv
          mountPath: /var/www/html/test-drupal
      containers:
      - name: my-app15
        image: sree1207/my-app15:${IMAGE_TAG}
        ports:
        - containerPort: 80 
        volumeMounts:
        - name: efs-drupal-pv
          mountPath: /var/www/html/test-drupal
      volumes:
        - name: efs-drupal-pv
          persistentVolumeClaim:
            claimName: efs-drupal-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: myapp15-service
  namespace: default
  labels:
    app: my-app15
spec:
  selector:
    app: my-app15
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: drupal-ingress
  namespace: default
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80},{"HTTPS": 443}]'  # Replace with your ACM certificate ARN
    service.beta.kubernetes.io/aws-load-balancer-name: "my-static-lb" 
spec:
  ingressClassName: alb
  rules:
    - host: ir-revamp-kubernetes.innoraft-sites.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: myapp15-service
                port:
                  number: 80

